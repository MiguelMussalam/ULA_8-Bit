$date
	Sun Nov 10 00:21:23 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module ULA_tb $end
$var wire 9 ! s [8:0] $end
$var reg 8 " a [7:0] $end
$var reg 8 # b [7:0] $end
$var reg 1 $ clk $end
$var reg 3 % opcode [2:0] $end
$scope module uut $end
$var wire 8 & a_in [7:0] $end
$var wire 8 ' b_in [7:0] $end
$var wire 1 $ clk $end
$var wire 3 ( opcode_in [2:0] $end
$var wire 9 ) s_in [8:0] $end
$var wire 9 * s_out [8:0] $end
$var wire 8 + s [7:0] $end
$var wire 8 , opcode_out [7:0] $end
$var wire 8 - b_out [7:0] $end
$var wire 8 . a_out [7:0] $end
$scope module and_1 $end
$var wire 8 / s [7:0] $end
$var wire 8 0 b [7:0] $end
$var wire 8 1 a [7:0] $end
$upscope $end
$scope module and_2 $end
$var wire 9 2 a [8:0] $end
$var wire 1 3 en $end
$var reg 9 4 b [8:0] $end
$upscope $end
$scope module d $end
$var wire 3 5 a [2:0] $end
$var wire 1 6 enable $end
$var reg 8 7 y [7:0] $end
$upscope $end
$scope module or_1 $end
$var wire 8 8 s [7:0] $end
$var wire 8 9 b [7:0] $end
$var wire 8 : a [7:0] $end
$upscope $end
$scope module or_2 $end
$var wire 9 ; a [8:0] $end
$var wire 1 < en $end
$var reg 9 = b [8:0] $end
$upscope $end
$scope module reg_a $end
$var wire 1 $ clk $end
$var wire 8 > d [7:0] $end
$var wire 8 ? q [7:0] $end
$var wire 8 @ nq [7:0] $end
$scope begin ffd_inst[0] $end
$var parameter 2 A i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 B clr $end
$var wire 1 C d $end
$var wire 1 D pr $end
$var wire 1 E q $end
$var wire 1 F nq $end
$scope module j $end
$var wire 1 G clk $end
$var wire 1 H clr $end
$var wire 1 C j $end
$var wire 1 I k $end
$var wire 1 J pr $end
$var reg 1 F nq $end
$var reg 1 E q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[1] $end
$var parameter 2 K i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 L clr $end
$var wire 1 M d $end
$var wire 1 N pr $end
$var wire 1 O q $end
$var wire 1 P nq $end
$scope module j $end
$var wire 1 Q clk $end
$var wire 1 R clr $end
$var wire 1 M j $end
$var wire 1 S k $end
$var wire 1 T pr $end
$var reg 1 P nq $end
$var reg 1 O q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[2] $end
$var parameter 3 U i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 V clr $end
$var wire 1 W d $end
$var wire 1 X pr $end
$var wire 1 Y q $end
$var wire 1 Z nq $end
$scope module j $end
$var wire 1 [ clk $end
$var wire 1 \ clr $end
$var wire 1 W j $end
$var wire 1 ] k $end
$var wire 1 ^ pr $end
$var reg 1 Z nq $end
$var reg 1 Y q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[3] $end
$var parameter 3 _ i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 ` clr $end
$var wire 1 a d $end
$var wire 1 b pr $end
$var wire 1 c q $end
$var wire 1 d nq $end
$scope module j $end
$var wire 1 e clk $end
$var wire 1 f clr $end
$var wire 1 a j $end
$var wire 1 g k $end
$var wire 1 h pr $end
$var reg 1 d nq $end
$var reg 1 c q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[4] $end
$var parameter 4 i i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 j clr $end
$var wire 1 k d $end
$var wire 1 l pr $end
$var wire 1 m q $end
$var wire 1 n nq $end
$scope module j $end
$var wire 1 o clk $end
$var wire 1 p clr $end
$var wire 1 k j $end
$var wire 1 q k $end
$var wire 1 r pr $end
$var reg 1 n nq $end
$var reg 1 m q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[5] $end
$var parameter 4 s i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 t clr $end
$var wire 1 u d $end
$var wire 1 v pr $end
$var wire 1 w q $end
$var wire 1 x nq $end
$scope module j $end
$var wire 1 y clk $end
$var wire 1 z clr $end
$var wire 1 u j $end
$var wire 1 { k $end
$var wire 1 | pr $end
$var reg 1 x nq $end
$var reg 1 w q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[6] $end
$var parameter 4 } i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 ~ clr $end
$var wire 1 !" d $end
$var wire 1 "" pr $end
$var wire 1 #" q $end
$var wire 1 $" nq $end
$scope module j $end
$var wire 1 %" clk $end
$var wire 1 &" clr $end
$var wire 1 !" j $end
$var wire 1 '" k $end
$var wire 1 (" pr $end
$var reg 1 $" nq $end
$var reg 1 #" q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[7] $end
$var parameter 4 )" i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 *" clr $end
$var wire 1 +" d $end
$var wire 1 ," pr $end
$var wire 1 -" q $end
$var wire 1 ." nq $end
$scope module j $end
$var wire 1 /" clk $end
$var wire 1 0" clr $end
$var wire 1 +" j $end
$var wire 1 1" k $end
$var wire 1 2" pr $end
$var reg 1 ." nq $end
$var reg 1 -" q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module reg_b $end
$var wire 1 $ clk $end
$var wire 8 3" d [7:0] $end
$var wire 8 4" q [7:0] $end
$var wire 8 5" nq [7:0] $end
$scope begin ffd_inst[0] $end
$var parameter 2 6" i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 7" clr $end
$var wire 1 8" d $end
$var wire 1 9" pr $end
$var wire 1 :" q $end
$var wire 1 ;" nq $end
$scope module j $end
$var wire 1 <" clk $end
$var wire 1 =" clr $end
$var wire 1 8" j $end
$var wire 1 >" k $end
$var wire 1 ?" pr $end
$var reg 1 ;" nq $end
$var reg 1 :" q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[1] $end
$var parameter 2 @" i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 A" clr $end
$var wire 1 B" d $end
$var wire 1 C" pr $end
$var wire 1 D" q $end
$var wire 1 E" nq $end
$scope module j $end
$var wire 1 F" clk $end
$var wire 1 G" clr $end
$var wire 1 B" j $end
$var wire 1 H" k $end
$var wire 1 I" pr $end
$var reg 1 E" nq $end
$var reg 1 D" q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[2] $end
$var parameter 3 J" i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 K" clr $end
$var wire 1 L" d $end
$var wire 1 M" pr $end
$var wire 1 N" q $end
$var wire 1 O" nq $end
$scope module j $end
$var wire 1 P" clk $end
$var wire 1 Q" clr $end
$var wire 1 L" j $end
$var wire 1 R" k $end
$var wire 1 S" pr $end
$var reg 1 O" nq $end
$var reg 1 N" q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[3] $end
$var parameter 3 T" i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 U" clr $end
$var wire 1 V" d $end
$var wire 1 W" pr $end
$var wire 1 X" q $end
$var wire 1 Y" nq $end
$scope module j $end
$var wire 1 Z" clk $end
$var wire 1 [" clr $end
$var wire 1 V" j $end
$var wire 1 \" k $end
$var wire 1 ]" pr $end
$var reg 1 Y" nq $end
$var reg 1 X" q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[4] $end
$var parameter 4 ^" i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 _" clr $end
$var wire 1 `" d $end
$var wire 1 a" pr $end
$var wire 1 b" q $end
$var wire 1 c" nq $end
$scope module j $end
$var wire 1 d" clk $end
$var wire 1 e" clr $end
$var wire 1 `" j $end
$var wire 1 f" k $end
$var wire 1 g" pr $end
$var reg 1 c" nq $end
$var reg 1 b" q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[5] $end
$var parameter 4 h" i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 i" clr $end
$var wire 1 j" d $end
$var wire 1 k" pr $end
$var wire 1 l" q $end
$var wire 1 m" nq $end
$scope module j $end
$var wire 1 n" clk $end
$var wire 1 o" clr $end
$var wire 1 j" j $end
$var wire 1 p" k $end
$var wire 1 q" pr $end
$var reg 1 m" nq $end
$var reg 1 l" q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[6] $end
$var parameter 4 r" i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 s" clr $end
$var wire 1 t" d $end
$var wire 1 u" pr $end
$var wire 1 v" q $end
$var wire 1 w" nq $end
$scope module j $end
$var wire 1 x" clk $end
$var wire 1 y" clr $end
$var wire 1 t" j $end
$var wire 1 z" k $end
$var wire 1 {" pr $end
$var reg 1 w" nq $end
$var reg 1 v" q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[7] $end
$var parameter 4 |" i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 }" clr $end
$var wire 1 ~" d $end
$var wire 1 !# pr $end
$var wire 1 "# q $end
$var wire 1 ## nq $end
$scope module j $end
$var wire 1 $# clk $end
$var wire 1 %# clr $end
$var wire 1 ~" j $end
$var wire 1 &# k $end
$var wire 1 '# pr $end
$var reg 1 ## nq $end
$var reg 1 "# q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module s1 $end
$var wire 1 $ clk $end
$var wire 8 (# d [7:0] $end
$var wire 8 )# q [7:0] $end
$var wire 8 *# nq [7:0] $end
$scope begin ffd_inst[0] $end
$var parameter 2 +# i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 ,# clr $end
$var wire 1 -# d $end
$var wire 1 .# pr $end
$var wire 1 /# q $end
$var wire 1 0# nq $end
$scope module j $end
$var wire 1 1# clk $end
$var wire 1 2# clr $end
$var wire 1 -# j $end
$var wire 1 3# k $end
$var wire 1 4# pr $end
$var reg 1 0# nq $end
$var reg 1 /# q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[1] $end
$var parameter 2 5# i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 6# clr $end
$var wire 1 7# d $end
$var wire 1 8# pr $end
$var wire 1 9# q $end
$var wire 1 :# nq $end
$scope module j $end
$var wire 1 ;# clk $end
$var wire 1 <# clr $end
$var wire 1 7# j $end
$var wire 1 =# k $end
$var wire 1 ># pr $end
$var reg 1 :# nq $end
$var reg 1 9# q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[2] $end
$var parameter 3 ?# i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 @# clr $end
$var wire 1 A# d $end
$var wire 1 B# pr $end
$var wire 1 C# q $end
$var wire 1 D# nq $end
$scope module j $end
$var wire 1 E# clk $end
$var wire 1 F# clr $end
$var wire 1 A# j $end
$var wire 1 G# k $end
$var wire 1 H# pr $end
$var reg 1 D# nq $end
$var reg 1 C# q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[3] $end
$var parameter 3 I# i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 J# clr $end
$var wire 1 K# d $end
$var wire 1 L# pr $end
$var wire 1 M# q $end
$var wire 1 N# nq $end
$scope module j $end
$var wire 1 O# clk $end
$var wire 1 P# clr $end
$var wire 1 K# j $end
$var wire 1 Q# k $end
$var wire 1 R# pr $end
$var reg 1 N# nq $end
$var reg 1 M# q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[4] $end
$var parameter 4 S# i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 T# clr $end
$var wire 1 U# d $end
$var wire 1 V# pr $end
$var wire 1 W# q $end
$var wire 1 X# nq $end
$scope module j $end
$var wire 1 Y# clk $end
$var wire 1 Z# clr $end
$var wire 1 U# j $end
$var wire 1 [# k $end
$var wire 1 \# pr $end
$var reg 1 X# nq $end
$var reg 1 W# q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[5] $end
$var parameter 4 ]# i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 ^# clr $end
$var wire 1 _# d $end
$var wire 1 `# pr $end
$var wire 1 a# q $end
$var wire 1 b# nq $end
$scope module j $end
$var wire 1 c# clk $end
$var wire 1 d# clr $end
$var wire 1 _# j $end
$var wire 1 e# k $end
$var wire 1 f# pr $end
$var reg 1 b# nq $end
$var reg 1 a# q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[6] $end
$var parameter 4 g# i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 h# clr $end
$var wire 1 i# d $end
$var wire 1 j# pr $end
$var wire 1 k# q $end
$var wire 1 l# nq $end
$scope module j $end
$var wire 1 m# clk $end
$var wire 1 n# clr $end
$var wire 1 i# j $end
$var wire 1 o# k $end
$var wire 1 p# pr $end
$var reg 1 l# nq $end
$var reg 1 k# q $end
$upscope $end
$upscope $end
$upscope $end
$scope begin ffd_inst[7] $end
$var parameter 4 q# i $end
$scope module ff $end
$var wire 1 $ clk $end
$var wire 1 r# clr $end
$var wire 1 s# d $end
$var wire 1 t# pr $end
$var wire 1 u# q $end
$var wire 1 v# nq $end
$scope module j $end
$var wire 1 w# clk $end
$var wire 1 x# clr $end
$var wire 1 s# j $end
$var wire 1 y# k $end
$var wire 1 z# pr $end
$var reg 1 v# nq $end
$var reg 1 u# q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$scope module som_1 $end
$var wire 8 {# a [7:0] $end
$var wire 8 |# b [7:0] $end
$var wire 9 }# s [8:0] $end
$var wire 7 ~# c [6:0] $end
$scope module m1 $end
$var wire 1 !$ a $end
$var wire 1 "$ b $end
$var reg 1 #$ c $end
$var reg 1 $$ s $end
$upscope $end
$scope module m2 $end
$var wire 1 %$ a $end
$var wire 1 &$ b $end
$var wire 1 '$ cin $end
$var reg 1 ($ cout $end
$var reg 1 )$ s $end
$upscope $end
$scope module m3 $end
$var wire 1 *$ a $end
$var wire 1 +$ b $end
$var wire 1 ,$ cin $end
$var reg 1 -$ cout $end
$var reg 1 .$ s $end
$upscope $end
$scope module m4 $end
$var wire 1 /$ a $end
$var wire 1 0$ b $end
$var wire 1 1$ cin $end
$var reg 1 2$ cout $end
$var reg 1 3$ s $end
$upscope $end
$scope module m5 $end
$var wire 1 4$ a $end
$var wire 1 5$ b $end
$var wire 1 6$ cin $end
$var reg 1 7$ cout $end
$var reg 1 8$ s $end
$upscope $end
$scope module m6 $end
$var wire 1 9$ a $end
$var wire 1 :$ b $end
$var wire 1 ;$ cin $end
$var reg 1 <$ cout $end
$var reg 1 =$ s $end
$upscope $end
$scope module m7 $end
$var wire 1 >$ a $end
$var wire 1 ?$ b $end
$var wire 1 @$ cin $end
$var reg 1 A$ cout $end
$var reg 1 B$ s $end
$upscope $end
$scope module m8 $end
$var wire 1 C$ a $end
$var wire 1 D$ b $end
$var wire 1 E$ cin $end
$var reg 1 F$ cout $end
$var reg 1 G$ s $end
$upscope $end
$upscope $end
$scope module som_2 $end
$var wire 9 H$ a [8:0] $end
$var wire 1 I$ en $end
$var reg 9 J$ b [8:0] $end
$upscope $end
$scope module sub_1 $end
$var wire 8 K$ a [7:0] $end
$var wire 8 L$ b [7:0] $end
$var wire 9 M$ s [8:0] $end
$var wire 7 N$ c [6:0] $end
$scope module n1 $end
$var wire 1 O$ a $end
$var wire 1 P$ b $end
$var reg 1 Q$ c $end
$var reg 1 R$ s $end
$upscope $end
$scope module n2 $end
$var wire 1 S$ a $end
$var wire 1 T$ b $end
$var wire 1 U$ cin $end
$var reg 1 V$ cout $end
$var reg 1 W$ s $end
$upscope $end
$scope module n3 $end
$var wire 1 X$ a $end
$var wire 1 Y$ b $end
$var wire 1 Z$ cin $end
$var reg 1 [$ cout $end
$var reg 1 \$ s $end
$upscope $end
$scope module n4 $end
$var wire 1 ]$ a $end
$var wire 1 ^$ b $end
$var wire 1 _$ cin $end
$var reg 1 `$ cout $end
$var reg 1 a$ s $end
$upscope $end
$scope module n5 $end
$var wire 1 b$ a $end
$var wire 1 c$ b $end
$var wire 1 d$ cin $end
$var reg 1 e$ cout $end
$var reg 1 f$ s $end
$upscope $end
$scope module n6 $end
$var wire 1 g$ a $end
$var wire 1 h$ b $end
$var wire 1 i$ cin $end
$var reg 1 j$ cout $end
$var reg 1 k$ s $end
$upscope $end
$scope module n7 $end
$var wire 1 l$ a $end
$var wire 1 m$ b $end
$var wire 1 n$ cin $end
$var reg 1 o$ cout $end
$var reg 1 p$ s $end
$upscope $end
$scope module n8 $end
$var wire 1 q$ a $end
$var wire 1 r$ b $end
$var wire 1 s$ cin $end
$var reg 1 t$ cout $end
$var reg 1 u$ s $end
$upscope $end
$upscope $end
$scope module sub_2 $end
$var wire 9 v$ a [8:0] $end
$var wire 1 w$ en $end
$var reg 9 x$ b [8:0] $end
$upscope $end
$scope module xor_1 $end
$var wire 8 y$ a [7:0] $end
$var wire 8 z$ b [7:0] $end
$var wire 8 {$ s [7:0] $end
$upscope $end
$scope module xor_2 $end
$var wire 9 |$ a [8:0] $end
$var wire 1 }$ en $end
$var reg 9 ~$ b [8:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 q#
b110 g#
b101 ]#
b100 S#
b11 I#
b10 ?#
b1 5#
b0 +#
b111 |"
b110 r"
b101 h"
b100 ^"
b11 T"
b10 J"
b1 @"
b0 6"
b111 )"
b110 }
b101 s
b100 i
b11 _
b10 U
b1 K
b0 A
$end
#0
$dumpvars
b0zzzzzzzz ~$
0}$
bx0 |$
b0 {$
b11111110 z$
b11111110 y$
b0zzzzzzzz x$
0w$
bx0 v$
0u$
0t$
0s$
1r$
1q$
0p$
0o$
0n$
1m$
1l$
0k$
0j$
0i$
1h$
1g$
0f$
0e$
0d$
1c$
1b$
0a$
0`$
0_$
1^$
1]$
0\$
0[$
0Z$
1Y$
1X$
0W$
0V$
0U$
1T$
1S$
0R$
0Q$
0P$
0O$
b0 N$
bx0 M$
b11111110 L$
b11111110 K$
bx0 J$
1I$
bx0 H$
1G$
1F$
1E$
1D$
1C$
1B$
1A$
1@$
1?$
1>$
1=$
1<$
1;$
1:$
19$
18$
17$
16$
15$
14$
13$
12$
11$
10$
1/$
1.$
1-$
1,$
1+$
1*$
0)$
1($
0'$
1&$
1%$
0$$
0#$
0"$
0!$
b1111110 ~#
bx0 }#
b11111110 |#
b11111110 {#
1z#
xy#
1x#
1w#
xv#
0u#
0t#
xs#
0r#
1p#
xo#
1n#
1m#
xl#
0k#
0j#
xi#
0h#
1f#
xe#
1d#
1c#
xb#
0a#
0`#
x_#
0^#
1\#
x[#
1Z#
1Y#
xX#
0W#
0V#
xU#
0T#
1R#
xQ#
1P#
1O#
xN#
0M#
0L#
xK#
0J#
1H#
xG#
1F#
1E#
xD#
0C#
0B#
xA#
0@#
1>#
x=#
1<#
1;#
x:#
09#
08#
x7#
06#
14#
13#
12#
11#
x0#
0/#
0.#
0-#
0,#
b0 *#
bx )#
bx0 (#
1'#
1&#
1%#
1$#
1##
0"#
0!#
0~"
0}"
1{"
1z"
1y"
1x"
1w"
0v"
0u"
0t"
0s"
1q"
1p"
1o"
1n"
1m"
0l"
0k"
0j"
0i"
1g"
1f"
1e"
1d"
1c"
0b"
0a"
0`"
0_"
1]"
1\"
1["
1Z"
1Y"
0X"
0W"
0V"
0U"
1S"
1R"
1Q"
1P"
1O"
0N"
0M"
0L"
0K"
1I"
1H"
1G"
1F"
1E"
0D"
0C"
0B"
0A"
1?"
0>"
1="
1<"
0;"
1:"
09"
18"
07"
b1 5"
b11111110 4"
b1 3"
12"
11"
10"
1/"
1."
0-"
0,"
0+"
0*"
1("
1'"
1&"
1%"
1$"
0#"
0""
0!"
0~
1|
1{
1z
1y
1x
0w
0v
0u
0t
1r
1q
1p
1o
1n
0m
0l
0k
0j
1h
1g
1f
1e
1d
0c
0b
0a
0`
1^
1]
1\
1[
1Z
0Y
0X
0W
0V
1T
1S
1R
1Q
1P
0O
0N
0M
0L
1J
0I
1H
1G
0F
1E
0D
1C
0B
b1 @
b11111110 ?
b1 >
b0zzzzzzzz =
0<
bx0 ;
b11111110 :
b11111110 9
b11111110 8
b1 7
16
b0 5
b0zzzzzzzz 4
03
bx0 2
b11111110 1
b11111110 0
b11111110 /
b11111110 .
b11111110 -
b1 ,
bx +
bx0 *
bx0 )
b0 (
b1 '
b1 &
b0 %
0$
b1 #
b1 "
b0xxxxxxxx !
$end
